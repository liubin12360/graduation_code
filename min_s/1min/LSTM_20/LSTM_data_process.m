function [train_data,test_data]=LSTM_data_process()
%% 数据加载并完成初始归一化
train_data_initial= [1.185 1.182 1.182 1.196 1.222 1.262 1.313 1.353 1.431 1.431 1.485 1.501 1.508 1.526 1.58 1.652 1.662 1.678 1.739 1.741 1.648 1.706 1.746 1.752 1.77 1.61 1.626 1.776 1.844 1.804 1.884 1.819 1.848 1.982 2.221 2.11 2.045 1.907 2.168 2.153 2.252 2.268 2.323 2.351 2.32 2.361 2.377 2.236 2.299 2.301 2.359 2.358 2.378 2.379 2.388 2.401 2.455 2.487 2.496 2.578 2.71 2.733 2.822 2.887 2.544 2.548 2.532 2.531 2.536 2.533 2.559 2.666 2.745 2.754 2.787 2.877 2.893 2.895 2.897 2.91 2.831 3.954 2.987 2.999 3.012 3.111 3.121 3.14 3.071 3.061 3.151 3.276 3.42 3.559 3.63 3.698 3.787 3.794 3.812 3.863 ; 
	                 1.648 1.706 1.746 1.752 1.77 1.61 1.626 1.776 1.844 1.804 1.884 1.819 1.848 1.982 2.221 2.11 2.045 1.907 2.168 2.153 2.252 2.268 2.323 2.351 2.32 2.361 2.377 2.236 2.299 2.301 2.359 2.358 2.378 2.379 2.388 2.401 2.455 2.487 2.496 2.578 2.71 2.733 2.822 2.887 2.544 2.548 2.532 2.531 2.536 2.533 2.559 2.666 2.745 2.754 2.787 2.877 2.893 2.895 2.897 2.91 2.831 3.954 2.987 2.999 3.012 3.111 3.121 3.14 3.071 3.061 3.151 3.276 3.42 3.559 3.63 3.698 3.787 3.794 3.812 3.863 3.832 3.978 3.995 3.767 3.879 3.507 3.598 3.899 3.986 4.121 4.189 4.398 4.388 4.526 4.423 4.528 4.666 4.678 4.656 4.651 ; 
	                 2.252 2.268 2.323 2.351 2.32 2.361 2.377 2.236 2.299 2.301 2.359 2.358 2.378 2.379 2.388 2.401 2.455 2.487 2.496 2.578 2.71 2.733 2.822 2.887 2.544 2.548 2.532 2.531 2.536 2.533 2.559 2.666 2.745 2.754 2.787 2.877 2.893 2.895 2.897 2.91 2.831 3.954 2.987 2.999 3.012 3.111 3.121 3.14 3.071 3.061 3.151 3.276 3.42 3.559 3.63 3.698 3.787 3.794 3.812 3.863 3.832 3.978 3.995 3.767 3.879 3.507 3.598 3.899 3.986 4.121 4.189 4.398 4.388 4.526 4.423 4.528 4.666 4.678 4.656 4.651 4.656 4.556 4.555 4.666 4.655 4.687 4.656 4.551 4.545 4.487 4.499 4.453 4.513 4.412 4.431 4.421 4.425 4.431 4.587 4.511 ;
                     2.71 2.733 2.822 2.887 2.544 2.548 2.532 2.531 2.536 2.533 2.559 2.666 2.745 2.754 2.787 2.877 2.893 2.895 2.897 2.91 2.831 3.954 2.987 2.999 3.012 3.111 3.121 3.14 3.071 3.061 3.151 3.276 3.42 3.559 3.63 3.698 3.787 3.794 3.812 3.863 3.832 3.978 3.995 3.767 3.879 3.507 3.598 3.899 3.986 4.121 4.189 4.398 4.388 4.526 4.423 4.528 4.666 4.678 4.656 4.651 4.656 4.556 4.555 4.666 4.655 4.687 4.656 4.551 4.545 4.487 4.499 4.453 4.513 4.412 4.431 4.421 4.425 4.431 4.587 4.511 4.578 4.511 4.412 4.425 4.432 4.43 4.412 4.325 4.319 4.289 4.287 4.256 4.218 4.184 4.012 4.001 3.996 3.889 3.878 3.788 ; 
                     2.831 3.954 2.987 2.999 3.012 3.111 3.121 3.14 3.071 3.061 3.151 3.276 3.42 3.559 3.63 3.698 3.787 3.794 3.812 3.863 3.832 3.978 3.995 3.767 3.879 3.507 3.598 3.899 3.986 4.121 4.189 4.398 4.388 4.526 4.423 4.528 4.666 4.678 4.656 4.651 4.656 4.556 4.555 4.666 4.655 4.687 4.656 4.551 4.545 4.487 4.499 4.453 4.513 4.412 4.431 4.421 4.425 4.431 4.587 4.511 4.578 4.511 4.412 4.425 4.432 4.43 4.412 4.325 4.319 4.289 4.287 4.256 4.218 4.184 4.012 4.001 3.996 3.889 3.878 3.788 3.756 3.756 3.657 3.456 3.421 3.412 3.342 3.258 3.369 3.152 3.111 3.101 3.002 2.897 2.554 2.522 2.997 2.998 3.056 2.732 ]';
% train_data_initial=[ 0.4413 0.4707 0.6953 0.8133;
%                      0.4379 0.4677 0.6981 0.8002;
%                      0.4517 0.4725 0.7006 0.8201;
%                      0.4557 0.4790 0.7019 0.8211;
%                      0.4601 0.4811 0.7101 0.8298;
%                      0.4612 0.4845 0.7188 0.8312]';
test_data_initial=[3.832 3.978 3.995 3.767 3.879 3.507 3.598 3.899 3.986 4.121 4.189 4.398 4.388 4.526 4.423 4.528 4.666 4.678 4.656 4.651 ; 
               	   4.656 4.556 4.555 4.666 4.655 4.687 4.656 4.551 4.545 4.487 4.499 4.453 4.513 4.412 4.431 4.421 4.425 4.431 4.587 4.511 ; 
               	   4.578 4.511 4.412 4.425 4.432 4.43 4.412 4.325 4.319 4.289 4.287 4.256 4.218 4.184 4.012 4.001 3.996 3.889 3.878 3.788 ; 
               	   3.756 3.756 3.657 3.456 3.421 3.412 3.342 3.258 3.369 3.152 3.111 3.101 3.002 2.897 2.554 2.522 2.997 2.998 3.056 2.732 ; 
               	   3.147 3.181 2.678 2.614 2.598 2.545 2.488 2.451 2.413 2.375 2.312 2.288 2.264 2.265 2.245 2.231 2.21 2.154 2.103 2.091 ; 
               	   2.011 1.991 1.853 1.785 1.731 1.77 1.759 1.746 1.936 1.776 1.781 1.757 1.753 1.773 1.873 1.878 1.763 1.744 1.723 1.84 ]';

data_length=size(train_data_initial,1);            %每个样本的长度
data_num=size(train_data_initial,2);               %样本数目  

%%归一化过程
for n=1:data_num
    train_data(:,n)=train_data_initial(:,n)%/sqrt(sum(train_data_initial(:,n).^2));  
end
for m=1:size(test_data_initial,2)
    test_data(:,m)=test_data_initial(:,m)%/sqrt(sum(test_data_initial(:,m).^2));
end